10 ' org &8100
20 ' label: ld   a , l 
30 ' ld a,ixh
40 ' ld ixh,a
50 ' ld ixh, ixl
60 ' ld ixl,ixh
70 ' ld iyh,iyl
80 ' ld iyl,iyh
90 ' ld a, 100
100 ' ld a,(hl)
110 ' ld (hl),a
120 ' ld (hl),10
130 ' ld a,(bc)
140 ' ld a,(de)
150 ' ld a,(&8000)
160 ' ld (bc),a
170 ' ld (de),a
180 ' ld (&8000),a
190 ' inc a
200 ' add b
410 ' ret

10000 rmode%=1:goto 10002
10001 rmode%=0
10002 ' pre-declare vars
10003 baddr%=&170:ln=0 ' basic start address & line number
10004 dim stmt$(3):stmti%=1:lex$="" ' lexer vars
10005 label=0:label$="" ' tmp label vars
10006 arg1$="":ret%=0:ret$="" ' std sub args and return
10007 oper1%=0:oper2%=0:oper2xy%=0:oper2hl%=0 ' tmp operand codes
10008 opc1%=-1:opc2%=-1:opc3%=-1:opc4%=-1 ' opcode
10009 opa%=&8000:saddr%=&FFFF                       

10010 ' operand codes
10011 cnz%=0:cz%=1:cnc%=2:cc%=3:cpo%=4:cpe%=5:cp%=6:cm%=7
10012 rix%=0:riy%=6:rih%=0:ril%=1
10013 rpbc%=0:rpde%=1:rphl%=2:rpaf%=3
10014 rwbc%=0:rwde%=16:rwhlixiy%=32:rwsp%=48
10015 ra%=7:rb%=0:rc%=1:rd%=2:re%=3:rh%=4:rl%=5

10020 ' opcode functions
10021 DEF FNfoct(x%)=x%*8
10022 DEF FNindV(i$)=mid$(i$, 2, len(i$)-2)

10100 ' operand type checks
10101 DEF FNisR(r$)=(asc(r$)>=97 and asc(r$)<=101) or r$="h" or r$="l"
10102 DEF FNisJ(j$)=j$="ixh" or j$="ixl" or j$="iyh" or j$="iyl"
10103 DEF FNisN(n$)=n$="0" or n$="00" or (val(n$)>0 and val(n$)<=&FF) ' TODO improve reliability
10104 DEF FNisA(n$)=n$="&0" or n$="&00" or n$="&0000" or (val(n$)>0 and val(n$)<=32767) or (val(n$)<0 and val(n$)>=-32768) ' TODO improve reliability
10105 DEF FNisInd(i$)=left$(i$,1)="(" and right$(i$, 1)=")"
10106 DEF FNisIndA(i$)=FNisA(mid$(i$, 2, len(i$)-2))
10107 DEF FNisQ(q$)=q$="bc" or q$="de" or q$="hl" or q$="ix" or q$="iy" or q$="sp"


11000 ' asm main loop
11010 ln=0
11020 if peek(baddr%+3) > 0 then ln = peek(baddr%+3) * 256
11030 ln=ln+peek(baddr%+2)
11040 if ln>9999 then goto 11900
11050 while not (peek(baddr%)=197 or peek(baddr%)=192)
11060   baddr%=baddr%+1
11070 wend
11080 baddr%=baddr%+2
11090 while not peek(baddr%)=0
11100   arg1$=chr$(peek(baddr%))
11110   gosub 12000
11120   baddr%=baddr% + 1
11130 wend
11140 if len(lex$)>0 then gosub 13000
11150 if stmt$(0)="" then label$="" else label$=stmt$(0)+":"
11160 if stmt$(1)="org" then gosub 13100
11170 if stmt$(1)="add" then gosub 13110
11180 if stmt$(1)="ld" then gosub 14000
11181 if stmt$(1)="ldd" then 'opc1%=237:opc2%=176
11181 if stmt$(1)="lddr" then 'opc1%=237:opc2%=176
11181 if stmt$(1)="ldi" then 'opc1%=237:opc2%=176
11181 if stmt$(1)="ldir" then opc1%=237:opc2%=176
11190 if stmt$(1)="inc" then gosub 15000
11200 if stmt$(1)="ret" then opc1%=201
11500 if opc1%>-1 then opc$=hex$(opc1%)
11510 if opc2%>-1 then opc$=opc$+hex$(opc2%)
11520 if opc3%>-1 then opc$=opc$+hex$(opc3%)
11530 if opc4%>-1 then opc$=opc$+hex$(opc4%)
11540 print using "#### \      \ \       \ & &,&";ln;opc$;label$;stmt$(1);stmt$(2);stmt$(3)
11550 if opc1%>-1 then poke opa%,opc1%:opa%=opa%+1
11560 if opc2%>-1 then poke opa%,opc2%:opa%=opa%+1
11570 if opc3%>-1 then poke opa%,opc3%:opa%=opa%+1
11580 if opc4%>-1 then poke opa%,opc4%:opa%=opa%+1
11600 stmt$(0)="":stmt$(1)="":stmt$(2)="":stmt$(3)="":stmti%=1
11610 opc1%=-1:opc2%=-1:opc3%=-1:opc4%=-1
11620 baddr%=baddr%+1
11630 goto 11010

11900 print "highest basic addr: " + hex$(himem)
11910 print "free memory: " + dec$(fre(0)/1024, "##.##") + "KB"
11920 if saddr%=&FFFF then saddr%=opa%
11930 if rmode%=0 then call saddr%

11999 end

12000 ' lex(char arg1)
12010 if not (arg1$=" " or arg1$=",") then lex$=lex$+arg1$ : return
12020 if len(lex$)=0 then return else gosub 13000
12030 return

13000 ' procesLexeme
13010 if right$(lex$, 1)=":" then stmt$(0)=left$(lex$,len(lex$)-1):label=-1:lex$="":return
13020 stmt$(stmti%)=lex$:lex$=""
13030 stmti%=stmti%+1
13040 return

13100 ' org
13101 if FNisA(stmt$(2)) then opa%=val(stmt$(2)) else goto 20100
13102 if saddr%=&FFFF then saddr%=opa%
13103 return

13110 ' add
13111 if stmt$(2)="a" then goto 13112 else goto 13114
13112 if stmt$(3)="" then goto 20100
13113 if FNisR(stmt$(3)) then stmt$(2)=stmt$(3):goto 13120
13114 if FNisR(stmt$(2)) then goto 13120

13119 goto 20100

13120 arg1$=stmt$(2):gosub 20000
13122 opc1%=(128 OR ret%):return

14000 ' ld
14001 if FNisR(stmt$(2)) and FNisR(stmt$(3)) then goto 14036 'RR
14002 if FNisR(stmt$(2)) and FNisJ(stmt$(3)) then goto 14103 'RJ
14003 if FNisJ(stmt$(2)) and FNisR(stmt$(3)) then goto 14106 'JR
14004 if stmt$(2)="ixh" and stmt$(3)="ixl" then opc1%=221:opc2%=101:return
14005 if stmt$(2)="ixl" and stmt$(3)="ixh" then opc1%=221:opc2%=108:return
14006 if stmt$(2)="iyh" and stmt$(3)="iyl" then opc1%=253:opc2%=101:return
14007 if stmt$(2)="iyl" and stmt$(3)="iyh" then opc1%=253:opc2%=108:return
14008 if FNisR(stmt$(2)) and FNisN(stmt$(3)) then goto 14109 'RN
14009 if FNisR(stmt$(2)) and stmt$(3)="(hl)" then goto 14111 'R(hl)
14010 'R(I+D)
14011 if stmt$(2)="(hl)" and FNisR(stmt$(3)) then goto 14130 '(hl)R
14012 if stmt$(2)="(hl)" and FNisN(stmt$(3)) then opc1%=54:opc2%=val(stmt$(3)):return '(hl)N
14013 '(I+D)R
14014 '(I+D)N
14015 if stmt$(2)="a" and stmt$(3)="(bc)" then opc1%=10:return 'a(bc)
14016 if stmt$(2)="a" and stmt$(3)="(de)" then opc1%=26:return 'a(de)
14017 if stmt$(2)="a" and FNisInd(stmt$(3)) then if FNisIndA(stmt$(3)) then goto 14113 'a(A)
14018 if stmt$(2)="(bc)" and stmt$(3)="a" then opc1%=2:return '(bc)a
14019 if stmt$(2)="(de)" and stmt$(3)="a" then opc1%=18:return '(de)a
14020 if FNisInd(stmt$(2)) then if FNisIndA(stmt$(2)) and stmt$(3)="a" then goto 14140 '(A)a
14021 'ia
14022 'ra
14023 'ai
14024 'ar
14025 if FNisQ(stmt$(2)) and FNisA(stmt$(3)) then goto 14116 'QA
14026 'IA
14027 'Q(A)
14028 'hl(A)
14029 'I(A)
14030 '(A)Q
14031 '(A)hl
14032 '(A)I
14033 'sphl
14034 'spI
14035 goto 20100
14036 arg1$=stmt$(2):gosub 20000:oper1%=ret%
14037 arg1$=stmt$(3):gosub 20000:oper2%=ret%
14038 opc1%=64 OR FNfoct(oper1%) or oper2%:return
14103 arg1$=stmt$(2):gosub 20000:oper1%=ret%
14104 arg1$=stmt$(3):gosub 20010:oper2xy%=retxy%:oper2hl%=rethl%
14105 opc1%=221 or oper2xy%:opc2%=68 or FNfoct(oper1%) or oper2hl%:return
14106 arg1$=stmt$(3):gosub 20000:oper1%=ret%
14107 arg1$=stmt$(2):gosub 20010:oper2xy%=retxy%:oper2hl%=rethl%
14108 opc1%=221 or oper2xy%:opc2%=96 or oper1% or FNfoct(oper2hl%):return
14109 arg1$=stmt$(2):gosub 20000
14110 opc1%=6 OR FNfoct(ret%):opc2%=val(stmt$(3)):return
14111 arg1$=stmt$(2):gosub 20000
14112 opc1%=70 OR FNfoct(ret%):return
14113 indv$=mid$(stmt$(3),2,len(stmt$(3))-2)
14114 if val(indv$)<0 then addr=val(indv$)+65536 else addr=val(indv$)
14115 opc1%=58:opc2%=val(indv$) and &FF:opc3%=fix(addr/256):return
14116 arg1$=stmt$(2):gosub 20020
14117 if val(stmt$(3))<0 then addr=val(stmt$(3))+65536 else addr=val(stmt$(3))
14118 opc1%=1 or ret%:opc2%=val(stmt$(3)) and &FF:opc3%=fix(addr/256):return

14130 arg1$=stmt$(3):gosub 20000
14131 opc1%=112 or ret%:return
14140 indv$=mid$(stmt$(2),2,len(stmt$(2))-2)
14141 if val(indv$)<0 then addr=val(indv$)+65536 else addr=val(indv$)
14142 opc1%=50:opc2%=val(indv$) and &FF:opc3%=fix(addr/256):return

15000 ' inc
15010 arg1$=stmt$(2):gosub 20000
15020 if FNisR(stmt$(2)) then opc1%=4 or FNfoct(ret%):return

20000 ' getR(arg1$) -> R
20001 if arg1$="a" then ret%=ra%:return
20002 if arg1$="b" then ret%=rb%:return
20003 if arg1$="c" then ret%=rc%:return
20004 if arg1$="d" then ret%=rd%:return
20005 if arg1$="e" then ret%=re%:return
20006 if arg1$="h" then ret%=rh%:return
20007 if arg1$="l" then ret%=rl%:return
20008 ret%=-1:return

20010 ' getHIR(arg1$) -> xy, hl
20011 if arg1$="ixh" then retxy%=rix%:rethl%=rih%:return
20012 if arg1$="ixl" then retxy%=rix%:rethl%=ril%:return
20013 if arg1$="iyh" then retxy%=riy%:rethl%=rih%:return
20014 if arg1$="iyl" then retxy%=riy%:rethl%=ril%:return
20015 retxy%=-1: return

20020 ' getQ(arg1$) -> Q
20021 if arg1$="bc" then ret%=rwbc%:return
20022 if arg1$="de" then ret%=rwde%:return
20023 if arg1$="hl" or arg1$="ix" or arg1$="iy" then ret%=rwhlixiy%:return
20024 if arg1$="sp" then ret%=rwsp%:return

20100 ' ill inst error
20110 if stmt$(0)="" then label$="" else label$=stmt$(0)+":"
20120 print "Illegal instruction:"
20130 print using "#### \       \ & &,&";l;label$;stmt$(1);stmt$(2);stmt$(3)
20140 end

clg
run
